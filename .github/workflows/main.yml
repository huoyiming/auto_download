name: Download And Upload boot.img

on:
  workflow_dispatch:
    inputs:
      Download_Link:
        description: '下载链接'
        required: true

jobs:
  Download:
    runs-on: ubuntu-latest
    steps:
      - name: Download
        run: |
          pip3 install requests
          wget ${{ github.event.inputs.Download_Link }}
      - name: Unpack
        shell: python
        run: |
          import zipfile,os
          if '${{ github.event.inputs.Download_Link }}'.endswith('zip'):
              for i,j,k in os.walk('./'):
                  for file in k:
                      if file.endswith('.zip'):
                          file=file
              f = zipfile.ZipFile(file,'r')
              if 'payload.bin' in f.namelist():
                  print('Download payload dumper')
                  os.system('git clone https://github.com/vm03/payload_dumper.git')
                  f.extract('payload.bin',"./payload_dumper/")
                  os.system('cd payload_dumper && pip3 install -r requirements.txt')
                  os.system('cd payload_dumper && python3 payload_dumper.py payload.bin')
                  os.system('mkdir output && cp payload_dumper/output/boot.img ./output/ && cp payload_dumper/output/init_boot.img ./output/')
              else:
                  pathlist=[]
                  for i,j,k in os.walk('./'):
                      for file in k:
                          if file=='boot.img' or file=='init_boot.img':
                              pathlist.append(os.path.join(i,file))
                  os.system(f'mkdir output')
                  for path in pathlist:
                      os.system(f'cp {path} output/')
                    
          else:
              for i,j,k in os.walk('./'):
                  for file in k:
                      if file.endswith('.tgz'):
                          file=file
              os.system(f'tar -zxvf {file}')
              pathlist=[]
              for i,j,k in os.walk('./'):
                  for file in k:
                      if file=='boot.img' or file=='init_boot.img':
                          pathlist.append(os.path.join(i,file))
              os.system(f'mkdir output')
              for path in pathlist:
                  os.system(f'cp {path} output/')

      - name: Get Magiskboot
        shell: python
        run: |
          import requests,json,zipfile,os
          a=requests.get('https://api.github.com/repos/topjohnwu/magisk/releases/latest').text
          a=json.loads(a)
          url=a['assets'][0]['browser_download_url']
          magisk=requests.get(url).content
          with open('magisk.apk','wb') as f:
              f.write(magisk)
              f.close
          mgfile=zipfile.ZipFile('magisk.apk','r')
          os.system(f'mv {mgfile.extract("lib/x86_64/libmagiskboot.so","./")} ./magiskboot && sudo chmod +x magiskboot')

      - name: Check Kernel Info
        run: |
          for img_file in "output/"/*.img; do
              if [ -f "$img_file" ]; then
                  # 提取文件名
                  file_name=$(basename "$img_file")
                  # 执行unpack命令
                  ./magiskboot unpack "$img_file"
                  echo "Unpacked $file_name"
              fi
          done

      - name: Upload To Github Actions Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Download
          path: output
